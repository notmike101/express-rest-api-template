#!/usr/bin/env node
require('dotenv').config()

const path = require('path')
process.env.APP_ROOT = path.resolve(__dirname, '../')

const app = require('../app')
const http = require('http')

async function main() {
  const port = parseInt(process.env.APP_PORT || 5000)
  app.set('port', port)
  const server = http.createServer(app)

  try {
    await app.prepare()
    server.listen(port)

    server.on('error', (error) => {
      if (error.syscall !== 'listen') {
        throw error
      }

      var bind = typeof port === 'string' ? `Pipe ${port}` : `Port ${port}`

      const errors = {
        EACCESS() {
          console.error(bind + ' requires elevated privileges')
          process.exit(1)
        },
        EADDRINUSE() {
          console.error(bind + ' is already in use')
          process.exit(1)
        },
        default(err) {
          throw err
        }
      }

      errors[
        Object.prototype.hasOwnProperty.call(errors, error.code)
          ? error.code
          : 'default'
      ]()
    })

    server.on('listening', () => {
      var addr = server.address()
      var bind = typeof addr === 'string' ? `pipe ${addr}` : `port ${addr.port}`

      console.log(`Server listening on ${bind}`)
    })
  } catch (err) {
    console.log('Unable to initialize express app', err)
    process.exit()
  }
}

main()

module.exports = app
